from pathlib import Path

import FreeCAD as fc

from FreeCAD import Vector, Placement, Rotation

from freecad.workbench_ros.joint import make_joint
from freecad.workbench_ros.link import make_link
from freecad.workbench_ros.robot import make_robot
from freecad.workbench_ros.wb_utils import ros_name


def get_object(doc: fc.Document, label: str):
    objs = doc.getObjectsByLabel(label)
    if objs:
        return objs[0]


def make_links():
    doc = fc.activeDocument()
    dir = Path(doc.FileName).parent
    parts_doc = fc.open(str(dir / 'parallel_fingers.fcstd'))
    fc.setActiveDocument(doc.Name)

    visual_hand_link_ = doc.addObject('App::Link', 'visual_hand_')
    visual_hand_link_.LinkedObject = get_object(parts_doc, 'hand')

    visual_finger_ = doc.addObject('App::Link', 'visual_finger_')
    visual_finger_.LinkedObject = get_object(parts_doc, 'finger')

    collision_base_link_ = doc.addObject('App::Link', 'collision_hand_')
    collision_base_link_.LinkedObject = get_object(parts_doc, 'base')

    collision_finger_ = doc.addObject('App::Link', 'collision_finger_')
    collision_finger_.LinkedObject = get_object(parts_doc, 'finger')

def make_parallel_fingers():
    doc = fc.activeDocument()

    hand_link = make_link('hand_link')
    hand_link.Label2 = 'hand_link'
    hand_link.Visual = [get_object(doc, 'visual_hand_')]
    hand_link.Collision = [get_object(doc, 'collision_hand_')]
    hand_link.MountedPlacement = Placement(Vector(0.0, 0.0, 0.0),
                                     Rotation(0.0, 0.0, 0.0, 1.0))

    right_finger= make_link('right_finger')
    right_finger.Label2 = 'right_finger'
    right_finger.Visual = [get_object(doc, 'visual_finger_')]
    right_finger.Collision = [get_object(doc, 'collision_finger_')]
    right_finger.MountedPlacement = Placement(Vector(0.0, 0.0, 0.0),
                                     Rotation(0.0, 0.0, 0.0, 1.0))
    right_finger.MountedPlacement = Placement(Vector(0.0, 0.0, 0.0),
                                     Rotation(Vector(-0.71, 0.0, 0.71), 180.0))

    left_finger = make_link('left_finger')
    left_finger.Label2 = 'left_finger'
    left_finger.Visual = [get_object(doc, 'visual_finger_')]
    left_finger.Collision = [get_object(doc, 'collision_finger_')]
    left_finger.MountedPlacement = Placement(Vector(0.0, 0.0, 0.0),
                                     Rotation(0.0, 0.0, 0.0, 1.0))
    left_finger.MountedPlacement = Placement(Vector(0.0, 0.0, 0.0),
                                     Rotation(Vector(0.71, 0.0, 0.71), 180.0))

    hand_right_finger = make_joint('hand_right_finger')
    hand_right_finger.Label2 = 'hand_right_finger'
    hand_right_finger.Origin = Placement(Vector(0.0, 0.0, 0.0),
                                    Rotation(0.0, 0.0, 0.0, 1.0))
    hand_right_finger.Origin = Placement(Vector(5.0, 0.0, 0.0),
                                    Rotation(Vector(0.58, 0.58, 0.58), 120.0))
    hand_right_finger.Type = 'prismatic'

    hand_left_finger = make_joint('hand_left_finger')
    hand_left_finger.Label2 = ' hand_left_finger'
    hand_left_finger.Origin = Placement(Vector(0.0, 0.0, 0.0),
                                    Rotation(0.0, 0.0, 0.0, 1.0))
    hand_left_finger.Origin = Placement(Vector(-5.0, 0.0, 0.0),
                                    Rotation(Vector(0.58, -0.58, -0.58), 120.0))
    hand_left_finger.Type = 'prismatic'
    hand_left_finger.Mimic = True
    hand_left_finger.MimickedJoint = hand_right_finger
	

    robot = make_robot('parallel_fingers')
    robot.Group = [
            hand_link,
            right_finger,
            left_finger,
            hand_right_finger,
            hand_left_finger,
            ]
    # robot.recompute()
    robot.ViewObject.ShowCollision = False
    robot.ViewObject.ShowJointAxes = True
    robot.ViewObject.ShowReal = False
    robot.ViewObject.ShowVisual = True

    hand_right_finger.Parent = ros_name(hand_link)
    hand_right_finger.Child = ros_name(right_finger)

    hand_left_finger.Parent = ros_name(hand_link)
    hand_left_finger.Child = ros_name(left_finger)

    doc.recompute()


make_parallel_fingers()
